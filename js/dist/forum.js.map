{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,oC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCOxDC,IAAAA,aAAAA,IAAqB,oBAAoB,YACrCC,EAAAA,EAAAA,QAAOC,IAAAA,UAA2B,SAAS,SAAUC,GACjD,IAAMC,EAAOJ,IAAAA,MAAAA,UAAoC,mBAG7CI,IAAiB,IAATA,IACRD,EAAME,OAAO,UAGbD,GACAD,EAAMG,IAAI,aAAcC,IAAAA,UAAqB,CACzCC,KAAM,sBACNJ,KAAAA,GACDJ,IAAAA,WAAAA,MAAqB,0CAIhCC,EAAAA,EAAAA,QAAOQ,IAAAA,UAA4B,SAAS,WACxC,IAAMC,EAAMV,IAAAA,MAAAA,UAA4B,aAExC,GAAKU,EAAL,CAIA,IAAIC,EAAW,IAAIC,KACfC,GAAmB,EACnBC,GAAoB,EAElBC,EAAY,IAAIC,IAAIN,GAE1BO,OAAOC,iBAAiB,WAAW,SAACC,GAChC,GAAIA,EAAMC,SAAWL,EAAUK,QAIL,iBAAfD,EAAME,MAAsBF,EAAME,KAAK7B,eAAe,mBAoBjE,OAhBc2B,EAAME,KAAKC,iBAiBrB,IAAK,QACD,GAAItB,IAAAA,QAAAA,MAAoBa,EACpB,OAIJ,IAAK,IAAID,MAAQW,UAAYZ,EAASY,UAAYvB,IAAAA,MAAAA,UAA4B,kBAE1E,YADAiB,OAAOO,SAASC,SAIpBZ,GAAmB,EAEnBa,EAAiB,UAAW,SAE5B,MACJ,IAAK,SACD,IAAK1B,IAAAA,QAAAA,MAAoBc,EACrB,OAGJA,GAAoB,EAEpBY,EAAiB,QAAS,UAtClC,SAASA,EAAiBC,EAAcC,GACpC5B,IAAAA,OAAAA,KAAgB,CACZ2B,KAAAA,EACAE,SAAU,CACNC,IAAAA,UAAiB,CACbC,UAAW,sBACXC,QAFa,WAGTf,OAAOO,SAASC,WAErBzB,IAAAA,WAAAA,MAAqB,2DAE7BA,IAAAA,WAAAA,MAAqB,gDAAkD4B,QA+B/E,GAEH,IAAMK,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM1B,EACbuB,EAAOI,MAAQ,IACfJ,EAAOK,OAAS,IAChBL,EAAOM,MAAMC,SAAW,WACxBP,EAAOM,MAAME,IAAM,WACnBR,EAAOM,MAAMG,KAAO,UAEpBR,SAASS,KAAKC,YAAYX,W","sources":["webpack://@clarkwinkelmann/jwt-cookie-login/webpack/bootstrap","webpack://@clarkwinkelmann/jwt-cookie-login/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/jwt-cookie-login/webpack/runtime/define property getters","webpack://@clarkwinkelmann/jwt-cookie-login/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/jwt-cookie-login/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/jwt-cookie-login/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/jwt-cookie-login/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/jwt-cookie-login/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/jwt-cookie-login/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/jwt-cookie-login/external root \"flarum.core.compat['forum/components/SessionDropdown']\"","webpack://@clarkwinkelmann/jwt-cookie-login/external root \"flarum.core.compat['forum/ForumApplication']\"","webpack://@clarkwinkelmann/jwt-cookie-login/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SessionDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/ForumApplication'];","import app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport Button from 'flarum/common/components/Button';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport SessionDropdown from 'flarum/forum/components/SessionDropdown';\nimport ForumApplication from 'flarum/forum/ForumApplication';\n\napp.initializers.add('jwt-cookie-login', () => {\n    extend(SessionDropdown.prototype, 'items', function (items) {\n        const href = app.forum.attribute<string | false>('logoutRedirect');\n\n        // False is used to explicitly say the logout button should be hidden without any replacement\n        if (href || href === false) {\n            items.remove('logOut');\n        }\n\n        if (href) {\n            items.add('logOutLink', LinkButton.component({\n                icon: 'fas fa-sign-out-alt',\n                href,\n            }, app.translator.trans('core.forum.header.log_out_button')));\n        }\n    });\n\n    extend(ForumApplication.prototype, 'mount', function () {\n        const url = app.forum.attribute<string>('jwtIframe');\n\n        if (!url) {\n            return;\n        }\n\n        let bootTime = new Date();\n        let hasPromptedLogin = false;\n        let hasPromptedLogout = false;\n\n        const parsedUrl = new URL(url);\n\n        window.addEventListener('message', (event) => {\n            if (event.origin !== parsedUrl.origin) {\n                return;\n            }\n\n            if (typeof event.data !== 'object' || !event.data.hasOwnProperty('jwtSessionState')) {\n                return;\n            }\n\n            const state = event.data.jwtSessionState;\n\n            function showRefreshAlert(type: string, translation: string) {\n                app.alerts.show({\n                    type,\n                    controls: [\n                        Button.component({\n                            className: 'Button Button--link',\n                            onclick() {\n                                window.location.reload();\n                            },\n                        }, app.translator.trans('clarkwinkelmann-jwt-cookie-login.forum.alert.refresh')),\n                    ],\n                }, app.translator.trans('clarkwinkelmann-jwt-cookie-login.forum.alert.' + translation));\n            }\n\n            switch (state) {\n                case 'login':\n                    if (app.session.user || hasPromptedLogin) {\n                        return;\n                    }\n\n                    // After how many milliseconds should the page refresh automatically if the user was auto-connected\n                    if ((new Date()).getTime() - bootTime.getTime() < app.forum.attribute<number>('autoLoginDelay')) {\n                        window.location.reload();\n                        return;\n                    }\n\n                    hasPromptedLogin = true;\n\n                    showRefreshAlert('success', 'login');\n\n                    break;\n                case 'logout':\n                    if (!app.session.user || hasPromptedLogout) {\n                        return;\n                    }\n\n                    hasPromptedLogout = true;\n\n                    showRefreshAlert('error', 'logout');\n\n                    break;\n            }\n        }, false);\n\n        const iframe = document.createElement('iframe');\n        iframe.src = url;\n        iframe.width = '0';\n        iframe.height = '0';\n        iframe.style.position = 'absolute';\n        iframe.style.top = '-1000px;'\n        iframe.style.left = '-1000px';\n\n        document.body.appendChild(iframe);\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","extend","SessionDropdown","items","href","remove","add","LinkButton","icon","ForumApplication","url","bootTime","Date","hasPromptedLogin","hasPromptedLogout","parsedUrl","URL","window","addEventListener","event","origin","data","jwtSessionState","getTime","location","reload","showRefreshAlert","type","translation","controls","Button","className","onclick","iframe","document","createElement","src","width","height","style","position","top","left","body","appendChild"],"sourceRoot":""}